{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './HomePage.css';\nimport alertIcon from '../assets/bell.png';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(19).fill(0));\n  const {\n    webgazerInstance\n  } = useWebGazerContext();\n  const [gazingAt, setGazingAt] = useState(null);\n  const gazeTimeout = useRef(null);\n  const suggestions = ['สวัสดี', 'หิวข้าว', 'เข้าห้องน้ำ', 'สบายดีไหม', 'ขอบคุณ', 'ขอโทษ', 'คิดถึง', 'รัก', 'ไปไหน'];\n  const handleSend = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      console.log('Message sent:', result);\n      setMessage('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  const handleAlertClick = () => {\n    setShowPopup(true);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  const handleConfirmAlert = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/send-alert', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: 'แจ้งเตือนฉุกเฉิน'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send alert');\n      }\n      const result = await response.json();\n      console.log('Alert sent:', result);\n    } catch (error) {\n      console.error('Failed to send alert:', error);\n    } finally {\n      handlePopupClose();\n    }\n  };\n  const startCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(false);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(19).fill(0));\n    }\n  };\n  const stopCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  };\n  const generateCalibrationPoints = () => {\n    const positions = [{\n      x: 10,\n      y: 20\n    }, {\n      x: 10,\n      y: 35\n    }, {\n      x: 10,\n      y: 50\n    }, {\n      x: 10,\n      y: 65\n    }, {\n      x: 10,\n      y: 80\n    }, {\n      x: 10,\n      y: 95\n    }, {\n      x: 33,\n      y: 45\n    }, {\n      x: 59,\n      y: 45\n    }, {\n      x: 85,\n      y: 45\n    }, {\n      x: 33,\n      y: 63\n    }, {\n      x: 59,\n      y: 63\n    }, {\n      x: 85,\n      y: 63\n    }, {\n      x: 33,\n      y: 82\n    }, {\n      x: 59,\n      y: 82\n    }, {\n      x: 85,\n      y: 82\n    }, {\n      x: 92,\n      y: 26\n    }, {\n      x: 95,\n      y: 7\n    }];\n    return positions.map(pos => ({\n      x: `${pos.x}%`,\n      y: `${pos.y}%`,\n      color: 'red'\n    }));\n  };\n  const handleCalibrationClick = (index, e) => {\n    if (webgazerInstance.current) {\n      const {\n        clientX,\n        clientY\n      } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n      if (newClickCounts[index] >= 3) {\n        const newCalibrationPoints = [...calibrationPoints];\n        newCalibrationPoints[index].color = 'yellow';\n        setCalibrationPoints(newCalibrationPoints);\n      }\n    }\n  };\n\n  // ฟังก์ชันสำหรับจับการมองปุ่ม และตั้งเวลาสำหรับคลิก\n  const handleGaze = useCallback(data => {\n    if (data == null || calibrating) return;\n    const {\n      x,\n      y\n    } = data;\n    const buttons = document.querySelectorAll('.suggestion-button');\n    let gazedButton = null;\n    buttons.forEach(button => {\n      const rect = button.getBoundingClientRect();\n      const isWithinButton = x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n      if (isWithinButton) {\n        button.classList.add('gazing'); // Highlight the button that is being gazed at\n        if (!gazedButton) gazedButton = button;\n      } else {\n        button.classList.remove('gazing');\n      }\n    });\n    if (gazedButton) {\n      if (gazingAt !== gazedButton) {\n        setGazingAt(gazedButton); // Set the currently gazed button\n        if (gazeTimeout.current) {\n          clearTimeout(gazeTimeout.current); // Clear the timeout if user moves their gaze to another button\n        }\n        gazeTimeout.current = setTimeout(() => {\n          if (gazedButton) {\n            gazedButton.click(); // Simulate button click after 1 second of gaze\n            setMessage(gazedButton.textContent); // Set the text to input\n            setGazingAt(null); // Reset after click\n          }\n        }, 1000); // 1 second gaze time\n      }\n    } else {\n      setGazingAt(null);\n      if (gazeTimeout.current) {\n        clearTimeout(gazeTimeout.current); // Clear the timeout if no button is being gazed at\n        gazeTimeout.current = null;\n      }\n    }\n  }, [calibrating, gazingAt]);\n  useEffect(() => {\n    const instance = webgazerInstance.current;\n    if (instance) {\n      instance.addGazeListener && instance.addGazeListener(handleGaze);\n      return () => {\n        instance.removeGazeListener && instance.removeGazeListener(handleGaze);\n      };\n    }\n  }, [handleGaze]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => setMessage(suggestion),\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: alertIcon,\n      alt: \"Alert\",\n      className: \"alert-icon\",\n      onClick: handleAlertClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to send an emergency alert?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmAlert,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePopupClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCalibration,\n      children: \"Start Calibration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopCalibration,\n      children: \"Stop Calibration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calibration-points\",\n      children: calibrationPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calibration-point\",\n        style: {\n          left: point.x,\n          top: point.y,\n          backgroundColor: point.color\n        },\n        onClick: e => handleCalibrationClick(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"7CcLRYAfbAR9ibJsR8sLoIenDqU=\", false, function () {\n  return [useWebGazerContext];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","alertIcon","useWebGazerContext","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","showPopup","setShowPopup","calibrating","setCalibrating","calibrationPoints","setCalibrationPoints","clickCounts","setClickCounts","Array","fill","webgazerInstance","gazingAt","setGazingAt","gazeTimeout","suggestions","handleSend","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","console","log","error","handleAlertClick","handlePopupClose","handleConfirmAlert","startCalibration","current","clearData","showFaceOverlay","generateCalibrationPoints","stopCalibration","positions","x","y","map","pos","color","handleCalibrationClick","index","e","clientX","clientY","recordScreenPosition","newClickCounts","newCalibrationPoints","handleGaze","data","buttons","document","querySelectorAll","gazedButton","forEach","button","rect","getBoundingClientRect","isWithinButton","left","right","top","bottom","classList","add","remove","clearTimeout","setTimeout","click","textContent","instance","addGazeListener","removeGazeListener","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","suggestion","onClick","src","alt","point","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './HomePage.css';\nimport alertIcon from '../assets/bell.png'; \nimport { useWebGazerContext } from '../hooks/WebGazerContext';\n\nconst HomePage = () => {\n  const [message, setMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(19).fill(0));\n  const { webgazerInstance } = useWebGazerContext();\n\n  const [gazingAt, setGazingAt] = useState(null);\n  const gazeTimeout = useRef(null);\n\n  const suggestions = ['สวัสดี', 'หิวข้าว', 'เข้าห้องน้ำ', 'สบายดีไหม', 'ขอบคุณ', 'ขอโทษ', 'คิดถึง', 'รัก', 'ไปไหน'];\n\n  const handleSend = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n  \n      const result = await response.json();\n      console.log('Message sent:', result);\n      setMessage('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const handleAlertClick = () => {\n    setShowPopup(true);\n  };\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n\n  const handleConfirmAlert = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/send-alert', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: 'แจ้งเตือนฉุกเฉิน' }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send alert');\n      }\n\n      const result = await response.json();\n      console.log('Alert sent:', result);\n    } catch (error) {\n      console.error('Failed to send alert:', error);\n    } finally {\n      handlePopupClose();\n    }\n  };\n\n  const startCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(false);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(19).fill(0));\n    }\n  };\n\n  const stopCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  };\n\n  const generateCalibrationPoints = () => {\n    const positions = [\n      { x: 10, y: 20 }, { x: 10, y: 35 }, { x: 10, y: 50 }, { x: 10, y: 65 }, { x: 10, y: 80 },\n      { x: 10, y: 95 }, { x: 33, y: 45 }, { x: 59, y: 45 },  { x: 85, y: 45 },\n      { x: 33, y: 63 }, { x: 59, y: 63 }, { x: 85, y: 63 }, { x: 33, y: 82 },\n      { x: 59, y: 82 }, { x: 85, y: 82 }, { x: 92, y: 26 }, { x: 95, y: 7 },\n    ];\n    return positions.map(pos => ({ x: `${pos.x}%`, y: `${pos.y}%`, color: 'red' }));\n  };\n\n  const handleCalibrationClick = (index, e) => {\n    if (webgazerInstance.current) {\n      const { clientX, clientY } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n\n      if (newClickCounts[index] >= 3) {\n        const newCalibrationPoints = [...calibrationPoints];\n        newCalibrationPoints[index].color = 'yellow';\n        setCalibrationPoints(newCalibrationPoints);\n      }\n    }\n  };\n\n  // ฟังก์ชันสำหรับจับการมองปุ่ม และตั้งเวลาสำหรับคลิก\n  const handleGaze = useCallback((data) => {\n    if (data == null || calibrating) return;\n  \n    const { x, y } = data;\n    const buttons = document.querySelectorAll('.suggestion-button');\n    let gazedButton = null;\n  \n    buttons.forEach(button => {\n      const rect = button.getBoundingClientRect();\n      const isWithinButton = x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n  \n      if (isWithinButton) {\n        button.classList.add('gazing');  // Highlight the button that is being gazed at\n        if (!gazedButton) gazedButton = button;\n      } else {\n        button.classList.remove('gazing');\n      }\n    });\n  \n    if (gazedButton) {\n      if (gazingAt !== gazedButton) {\n        setGazingAt(gazedButton);  // Set the currently gazed button\n        if (gazeTimeout.current) {\n          clearTimeout(gazeTimeout.current);  // Clear the timeout if user moves their gaze to another button\n        }\n        gazeTimeout.current = setTimeout(() => {\n          if (gazedButton) {\n            gazedButton.click();  // Simulate button click after 1 second of gaze\n            setMessage(gazedButton.textContent);  // Set the text to input\n            setGazingAt(null);  // Reset after click\n          }\n        }, 1000);  // 1 second gaze time\n      }\n    } else {\n      setGazingAt(null);\n      if (gazeTimeout.current) {\n        clearTimeout(gazeTimeout.current);  // Clear the timeout if no button is being gazed at\n        gazeTimeout.current = null;\n      }\n    }\n  }, [calibrating, gazingAt]);\n\n  useEffect(() => {\n    const instance = webgazerInstance.current;\n    if (instance) {\n      instance.addGazeListener && instance.addGazeListener(handleGaze);\n      return () => {\n        instance.removeGazeListener && instance.removeGazeListener(handleGaze);\n      };\n    }\n  }, [handleGaze]);\n\n  return (\n    <div className=\"home-page\">\n      <input \n        type=\"text\" \n        value={message} \n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type your message here...\"\n      />\n      <div className=\"suggestions\">\n        {suggestions.map((suggestion, index) => (\n          <button \n            key={index} \n            className=\"suggestion-button\"\n            onClick={() => setMessage(suggestion)}\n          >\n            {suggestion}\n          </button>\n        ))}\n      </div>\n      <img src={alertIcon} alt=\"Alert\" className=\"alert-icon\" onClick={handleAlertClick} />\n      {showPopup && (\n        <div className=\"popup\">\n          <p>Are you sure you want to send an emergency alert?</p>\n          <button onClick={handleConfirmAlert}>Confirm</button>\n          <button onClick={handlePopupClose}>Cancel</button>\n        </div>\n      )}\n      <button onClick={startCalibration}>Start Calibration</button>\n      <button onClick={stopCalibration}>Stop Calibration</button>\n      <div className=\"calibration-points\">\n        {calibrationPoints.map((point, index) => (\n          <div\n            key={index}\n            className=\"calibration-point\"\n            style={{ left: point.x, top: point.y, backgroundColor: point.color }}\n            onClick={(e) => handleCalibrationClick(index, e)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}