{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/components/GazeTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport CalibrationPoint from './CalibrationPoint'; // ตรวจสอบเส้นทางให้ถูกต้อง\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GazeTracker = () => {\n  _s();\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(19).fill(0));\n  const webgazerInstance = useRef(null);\n  const gazeTimers = useRef({});\n  useEffect(() => {\n    const initWebgazer = async () => {\n      try {\n        await window.webgazer.setRegression('ridge').setTracker('clmtrackr').setGazeListener(handleGaze).begin();\n        webgazerInstance.current = window.webgazer;\n        window.webgazer.showVideo(true);\n        window.webgazer.showFaceOverlay(true);\n        window.webgazer.showFaceFeedbackBox(true);\n      } catch (error) {\n        console.error('Failed to initialize webgazer:', error);\n      }\n    };\n    initWebgazer();\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, []);\n  const handleGaze = useCallback(data => {\n    if (data == null || calibrating) return;\n    const {\n      x,\n      y\n    } = data;\n    Object.keys(gazeTimers.current).forEach(buttonId => {\n      const button = document.getElementById(buttonId);\n      if (button) {\n        const rect = button.getBoundingClientRect();\n        if (x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom) {\n          if (!gazeTimers.current[buttonId].isGazing) {\n            gazeTimers.current[buttonId].isGazing = true;\n            gazeTimers.current[buttonId].timer = setTimeout(() => {\n              handleButtonClick(button.innerText);\n            }, 1000); // 1 second gaze to trigger click\n          }\n        } else {\n          gazeTimers.current[buttonId].isGazing = false;\n          if (gazeTimers.current[buttonId].timer) {\n            clearTimeout(gazeTimers.current[buttonId].timer);\n          }\n        }\n      }\n    });\n  }, [calibrating]);\n  const handleButtonClick = text => {\n    if (!calibrating) {\n      // Perform the action you want when a button is clicked\n      console.log('Button clicked:', text);\n    }\n  };\n  const startCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(false);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(19).fill(0));\n    }\n  };\n  const stopCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  };\n  const generateCalibrationPoints = () => {\n    const positions = [{\n      x: 10,\n      y: 20\n    }, {\n      x: 10,\n      y: 35\n    }, {\n      x: 10,\n      y: 50\n    }, {\n      x: 10,\n      y: 65\n    }, {\n      x: 10,\n      y: 80\n    }, {\n      x: 10,\n      y: 95\n    }, {\n      x: 30,\n      y: 50\n    }, {\n      x: 50,\n      y: 50\n    }, {\n      x: 70,\n      y: 50\n    }, {\n      x: 90,\n      y: 50\n    }, {\n      x: 30,\n      y: 65\n    }, {\n      x: 50,\n      y: 65\n    }, {\n      x: 70,\n      y: 65\n    }, {\n      x: 90,\n      y: 65\n    }, {\n      x: 30,\n      y: 85\n    }, {\n      x: 50,\n      y: 85\n    }, {\n      x: 70,\n      y: 85\n    }, {\n      x: 95,\n      y: 30\n    }, {\n      x: 87,\n      y: 3\n    }];\n    return positions.map(pos => ({\n      x: `${pos.x}%`,\n      y: `${pos.y}%`\n    }));\n  };\n  const handleCalibrationClick = (index, e) => {\n    if (webgazerInstance.current) {\n      const {\n        clientX,\n        clientY\n      } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n      if (newClickCounts[index] >= 3) {\n        const newCalibrationPoints = [...calibrationPoints];\n        newCalibrationPoints[index].color = 'yellow';\n        setCalibrationPoints(newCalibrationPoints);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gaze-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCalibration,\n      children: \"\\u0E40\\u0E23\\u0E34\\u0E48\\u0E21\\u0E04\\u0E32\\u0E25\\u0E34\\u0E40\\u0E1A\\u0E23\\u0E15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopCalibration,\n      children: \"\\u0E2B\\u0E22\\u0E38\\u0E14\\u0E04\\u0E32\\u0E25\\u0E34\\u0E40\\u0E1A\\u0E23\\u0E15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), calibrating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calibration-points\",\n      children: calibrationPoints.map((point, index) => /*#__PURE__*/_jsxDEV(CalibrationPoint, {\n        point: point,\n        index: index,\n        handleCalibrationClick: handleCalibrationClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(GazeTracker, \"95Woj/fZyI8Eoa3KI/0OkJGw2y8=\");\n_c = GazeTracker;\nexport default GazeTracker;\nvar _c;\n$RefreshReg$(_c, \"GazeTracker\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","CalibrationPoint","jsxDEV","_jsxDEV","GazeTracker","_s","calibrating","setCalibrating","calibrationPoints","setCalibrationPoints","clickCounts","setClickCounts","Array","fill","webgazerInstance","gazeTimers","initWebgazer","window","webgazer","setRegression","setTracker","setGazeListener","handleGaze","begin","current","showVideo","showFaceOverlay","showFaceFeedbackBox","error","console","end","data","x","y","Object","keys","forEach","buttonId","button","document","getElementById","rect","getBoundingClientRect","left","right","top","bottom","isGazing","timer","setTimeout","handleButtonClick","innerText","clearTimeout","text","log","startCalibration","clearData","generateCalibrationPoints","stopCalibration","positions","map","pos","handleCalibrationClick","index","e","clientX","clientY","recordScreenPosition","newClickCounts","newCalibrationPoints","color","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","point","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/components/GazeTracker.js"],"sourcesContent":["\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport CalibrationPoint from './CalibrationPoint'; // ตรวจสอบเส้นทางให้ถูกต้อง\n\nconst GazeTracker = () => {\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(19).fill(0));\n  const webgazerInstance = useRef(null);\n  const gazeTimers = useRef({});\n\n  useEffect(() => {\n    const initWebgazer = async () => {\n      try {\n        await window.webgazer.setRegression('ridge').setTracker('clmtrackr')\n          .setGazeListener(handleGaze).begin();\n        webgazerInstance.current = window.webgazer;\n        window.webgazer.showVideo(true);\n        window.webgazer.showFaceOverlay(true);\n        window.webgazer.showFaceFeedbackBox(true);\n      } catch (error) {\n        console.error('Failed to initialize webgazer:', error);\n      }\n    };\n    \n    initWebgazer();\n\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, []);\n\n  const handleGaze = useCallback((data) => {\n    if (data == null || calibrating) return;\n\n    const { x, y } = data;\n    Object.keys(gazeTimers.current).forEach(buttonId => {\n      const button = document.getElementById(buttonId);\n      if (button) {\n        const rect = button.getBoundingClientRect();\n        if (\n          x >= rect.left &&\n          x <= rect.right &&\n          y >= rect.top &&\n          y <= rect.bottom\n        ) {\n          if (!gazeTimers.current[buttonId].isGazing) {\n            gazeTimers.current[buttonId].isGazing = true;\n            gazeTimers.current[buttonId].timer = setTimeout(() => {\n              handleButtonClick(button.innerText);\n            }, 1000); // 1 second gaze to trigger click\n          }\n        } else {\n          gazeTimers.current[buttonId].isGazing = false;\n          if (gazeTimers.current[buttonId].timer) {\n            clearTimeout(gazeTimers.current[buttonId].timer);\n          }\n        }\n      }\n    });\n  }, [calibrating]);\n\n  const handleButtonClick = (text) => {\n    if (!calibrating) {\n      // Perform the action you want when a button is clicked\n      console.log('Button clicked:', text);\n    }\n  };\n\n  const startCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(false);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(19).fill(0));\n    }\n  };\n\n  const stopCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  };\n\n  const generateCalibrationPoints = () => {\n    const positions = [\n      { x: 10, y: 20 }, { x: 10, y: 35 }, { x: 10, y: 50 }, { x: 10, y: 65 }, { x: 10, y: 80 },\n      { x: 10, y: 95 }, { x: 30, y: 50 }, { x: 50, y: 50 }, { x: 70, y: 50 }, { x: 90, y: 50 },\n      { x: 30, y: 65 }, { x: 50, y: 65 }, { x: 70, y: 65 }, { x: 90, y: 65 }, { x: 30, y: 85 },\n      { x: 50, y: 85 }, { x: 70, y: 85 }, { x: 95, y: 30 }, { x: 87, y: 3 },\n    ];\n    return positions.map(pos => ({ x: `${pos.x}%`, y: `${pos.y}%` }));\n  };\n\n  const handleCalibrationClick = (index, e) => {\n    if (webgazerInstance.current) {\n      const { clientX, clientY } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n\n      if (newClickCounts[index] >= 3) {\n        const newCalibrationPoints = [...calibrationPoints];\n        newCalibrationPoints[index].color = 'yellow';\n        setCalibrationPoints(newCalibrationPoints);\n      }\n    }\n  };\n\n  return (\n    <div className=\"gaze-tracker\">\n      <button onClick={startCalibration}>เริ่มคาลิเบรต</button>\n      <button onClick={stopCalibration}>หยุดคาลิเบรต</button>\n      {calibrating && (\n        <div className=\"calibration-points\">\n          {calibrationPoints.map((point, index) => (\n            <CalibrationPoint \n              key={index}\n              point={point}\n              index={index}\n              handleCalibrationClick={handleCalibrationClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GazeTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}