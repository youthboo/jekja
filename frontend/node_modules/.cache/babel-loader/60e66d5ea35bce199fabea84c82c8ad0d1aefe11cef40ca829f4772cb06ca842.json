{"ast":null,"code":"// // context/WebGazerContext.js\n// import React, { createContext, useContext } from 'react';\n// import useWebGazer from '../hooks/useWebGazer';\n\n// const WebGazerContext = createContext();\n\n// export const WebGazerProvider = ({ children }) => {\n//   const { webgazerReady, webgazerInstance, gazeTimers } = useWebGazer((data) => {\n//     // Handle gaze data here\n//   });\n\n//   return (\n//     <WebGazerContext.Provider value={{ webgazerReady, webgazerInstance, gazeTimers }}>\n//       {children}\n//     </WebGazerContext.Provider>\n//   );\n// };\n\n// export const useWebGazerContext = () => useContext(WebGazerContext);","map":{"version":3,"names":[],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/context/WebGazerContext.js"],"sourcesContent":["// // context/WebGazerContext.js\n// import React, { createContext, useContext } from 'react';\n// import useWebGazer from '../hooks/useWebGazer';\n\n// const WebGazerContext = createContext();\n\n// export const WebGazerProvider = ({ children }) => {\n//   const { webgazerReady, webgazerInstance, gazeTimers } = useWebGazer((data) => {\n//     // Handle gaze data here\n//   });\n\n//   return (\n//     <WebGazerContext.Provider value={{ webgazerReady, webgazerInstance, gazeTimers }}>\n//       {children}\n//     </WebGazerContext.Provider>\n//   );\n// };\n\n// export const useWebGazerContext = () => useContext(WebGazerContext);\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}