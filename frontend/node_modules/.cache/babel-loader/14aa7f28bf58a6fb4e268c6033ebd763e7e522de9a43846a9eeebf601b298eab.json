{"ast":null,"code":"var _s = $RefreshSig$();\n// Example of handling WebGazer errors\nimport { useEffect } from 'react';\nimport WebGazer from 'webgazer';\nconst WebGazerSetup = ({\n  onGaze\n}) => {\n  _s();\n  useEffect(() => {\n    const initWebGazer = () => {\n      try {\n        WebGazer.setRegression('ridge').setGazeListener((data, elapsedTime) => {\n          if (data) {\n            onGaze(data);\n          }\n        }).begin();\n      } catch (error) {\n        console.error('Error initializing WebGazer:', error);\n      }\n    };\n    initWebGazer();\n    return () => {\n      try {\n        if (WebGazer && WebGazer.end) {\n          WebGazer.end();\n        }\n      } catch (error) {\n        console.error('Error stopping WebGazer:', error);\n      }\n    };\n  }, [onGaze]);\n  return null;\n};\n_s(WebGazerSetup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WebGazerSetup;\nexport default WebGazerSetup;\nvar _c;\n$RefreshReg$(_c, \"WebGazerSetup\");","map":{"version":3,"names":["useEffect","WebGazer","WebGazerSetup","onGaze","_s","initWebGazer","setRegression","setGazeListener","data","elapsedTime","begin","error","console","end","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/components/WebGazerSetup.js"],"sourcesContent":["// Example of handling WebGazer errors\nimport { useEffect } from 'react';\nimport WebGazer from 'webgazer';\n\nconst WebGazerSetup = ({ onGaze }) => {\n  useEffect(() => {\n    const initWebGazer = () => {\n      try {\n        WebGazer.setRegression('ridge')\n          .setGazeListener((data, elapsedTime) => {\n            if (data) {\n              onGaze(data);\n            }\n          })\n          .begin();\n      } catch (error) {\n        console.error('Error initializing WebGazer:', error);\n      }\n    };\n\n    initWebGazer();\n\n    return () => {\n      try {\n        if (WebGazer && WebGazer.end) {\n          WebGazer.end();\n        }\n      } catch (error) {\n        console.error('Error stopping WebGazer:', error);\n      }\n    };\n  }, [onGaze]);\n\n  return null;\n};\n\nexport default WebGazerSetup;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpCJ,SAAS,CAAC,MAAM;IACd,MAAMK,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI;QACFJ,QAAQ,CAACK,aAAa,CAAC,OAAO,CAAC,CAC5BC,eAAe,CAAC,CAACC,IAAI,EAAEC,WAAW,KAAK;UACtC,IAAID,IAAI,EAAE;YACRL,MAAM,CAACK,IAAI,CAAC;UACd;QACF,CAAC,CAAC,CACDE,KAAK,CAAC,CAAC;MACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDN,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACX,IAAI;QACF,IAAIJ,QAAQ,IAAIA,QAAQ,CAACY,GAAG,EAAE;UAC5BZ,QAAQ,CAACY,GAAG,CAAC,CAAC;QAChB;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;EACH,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CA9BIF,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}