{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/components/CalibrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './CalibrationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalibrationPage = () => {\n  _s();\n  var _calibrationPoints$cu, _calibrationPoints$cu2;\n  const [calibrationPoints] = useState([{\n    x: 0.1,\n    y: 0.1\n  }, {\n    x: 0.9,\n    y: 0.1\n  }, {\n    x: 0.1,\n    y: 0.9\n  }, {\n    x: 0.9,\n    y: 0.9\n  }, {\n    x: 0.5,\n    y: 0.5\n  }]);\n  const [currentPoint, setCurrentPoint] = useState(0);\n  const showNextCalibrationPoint = useCallback(() => {\n    if (currentPoint < calibrationPoints.length) {\n      const point = calibrationPoints[currentPoint];\n      console.log(`Look at point: (${point.x}, ${point.y})`);\n      setTimeout(() => setCurrentPoint(prev => prev + 1), 2000);\n    } else {\n      console.log(\"Calibration complete.\");\n      // Save calibration data and finalize setup\n    }\n  }, [currentPoint, calibrationPoints]);\n  useEffect(() => {\n    const startCalibration = async () => {\n      if (window.webgazer) {\n        try {\n          await window.webgazer.setRegression('ridge').setTracker('clmtrackr').begin();\n          console.log(\"WebGazer is now tracking your gaze.\");\n          showNextCalibrationPoint();\n        } catch (error) {\n          console.error(\"Failed to start WebGazer:\", error);\n        }\n      } else {\n        console.error(\"WebGazer is not available.\");\n      }\n    };\n    startCalibration();\n    return () => {\n      if (window.webgazer) {\n        try {\n          window.webgazer.end();\n        } catch (error) {\n          console.error(\"Failed to stop WebGazer:\", error);\n        }\n      }\n    };\n  }, [showNextCalibrationPoint]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calibration-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calibration-point\",\n      style: {\n        top: `${((_calibrationPoints$cu = calibrationPoints[currentPoint]) === null || _calibrationPoints$cu === void 0 ? void 0 : _calibrationPoints$cu.y) * 100}%`,\n        left: `${((_calibrationPoints$cu2 = calibrationPoints[currentPoint]) === null || _calibrationPoints$cu2 === void 0 ? void 0 : _calibrationPoints$cu2.x) * 100}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CalibrationPage, \"1dG6B1AvZa9ls61keuTYgxzRPfY=\");\n_c = CalibrationPage;\nexport default CalibrationPage;\nvar _c;\n$RefreshReg$(_c, \"CalibrationPage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","CalibrationPage","_s","_calibrationPoints$cu","_calibrationPoints$cu2","calibrationPoints","x","y","currentPoint","setCurrentPoint","showNextCalibrationPoint","length","point","console","log","setTimeout","prev","startCalibration","window","webgazer","setRegression","setTracker","begin","error","end","className","children","style","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/components/CalibrationPage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport './CalibrationPage.css';\n\nconst CalibrationPage = () => {\n  const [calibrationPoints] = useState([\n    { x: 0.1, y: 0.1 },\n    { x: 0.9, y: 0.1 },\n    { x: 0.1, y: 0.9 },\n    { x: 0.9, y: 0.9 },\n    { x: 0.5, y: 0.5 },\n  ]);\n  const [currentPoint, setCurrentPoint] = useState(0);\n\n  const showNextCalibrationPoint = useCallback(() => {\n    if (currentPoint < calibrationPoints.length) {\n      const point = calibrationPoints[currentPoint];\n      console.log(`Look at point: (${point.x}, ${point.y})`);\n      setTimeout(() => setCurrentPoint(prev => prev + 1), 2000);\n    } else {\n      console.log(\"Calibration complete.\");\n      // Save calibration data and finalize setup\n    }\n  }, [currentPoint, calibrationPoints]);\n\n  useEffect(() => {\n    const startCalibration = async () => {\n      if (window.webgazer) {\n        try {\n          await window.webgazer.setRegression('ridge').setTracker('clmtrackr').begin();\n          console.log(\"WebGazer is now tracking your gaze.\");\n          showNextCalibrationPoint();\n        } catch (error) {\n          console.error(\"Failed to start WebGazer:\", error);\n        }\n      } else {\n        console.error(\"WebGazer is not available.\");\n      }\n    };\n\n    startCalibration();\n    \n    return () => {\n      if (window.webgazer) {\n        try {\n          window.webgazer.end();\n        } catch (error) {\n          console.error(\"Failed to stop WebGazer:\", error);\n        }\n      }\n    };\n  }, [showNextCalibrationPoint]);\n\n  return (\n    <div className=\"calibration-page\">\n      <div \n        className=\"calibration-point\" \n        style={{ \n          top: `${calibrationPoints[currentPoint]?.y * 100}%`, \n          left: `${calibrationPoints[currentPoint]?.x * 100}%` \n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default CalibrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}