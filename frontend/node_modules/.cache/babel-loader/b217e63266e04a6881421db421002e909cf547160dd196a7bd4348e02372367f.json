{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport './WebGazerWrapper.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebGazerWrapper = ({\n  children\n}) => {\n  _s();\n  const {\n    webgazerInstance,\n    webgazerReady\n  } = useWebGazerContext();\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(15).fill(0));\n  const startCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(true);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(15).fill(0));\n    }\n  }, [webgazerInstance]);\n  const stopCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  }, [webgazerInstance]);\n  const generateCalibrationPoints = () => {\n    const positions = [{\n      x: 12,\n      y: 25\n    }, {\n      x: 12,\n      y: 48\n    }, {\n      x: 12,\n      y: 69\n    }, {\n      x: 12,\n      y: 92\n    }, {\n      x: 35,\n      y: 45\n    }, {\n      x: 61,\n      y: 45\n    }, {\n      x: 87,\n      y: 45\n    }, {\n      x: 35,\n      y: 67\n    }, {\n      x: 61,\n      y: 67\n    }, {\n      x: 87,\n      y: 67\n    }, {\n      x: 35,\n      y: 86\n    }, {\n      x: 61,\n      y: 86\n    }, {\n      x: 87,\n      y: 86\n    }, {\n      x: 89,\n      y: 28\n    }, {\n      x: 95,\n      y: 7\n    }];\n    return positions.map(pos => ({\n      x: `${pos.x}%`,\n      y: `${pos.y}%`,\n      color: 'red'\n    }));\n  };\n  const handleCalibrationClick = useCallback((index, e) => {\n    if (webgazerInstance.current) {\n      const {\n        clientX,\n        clientY\n      } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n      if (newClickCounts[index] >= 3) {\n        const newCalibrationPoints = [...calibrationPoints];\n        newCalibrationPoints[index].color = 'yellow';\n        setCalibrationPoints(newCalibrationPoints);\n      }\n    }\n  }, [clickCounts, calibrationPoints, webgazerInstance]);\n  const handleGaze = useCallback(data => {\n    if (data == null || calibrating) return;\n    const {\n      x,\n      y\n    } = data;\n    const element = document.elementFromPoint(x, y);\n    if (element) {\n      const interactiveElement = element.closest('button, a, [role=\"button\"]');\n      if (interactiveElement) {\n        interactiveElement.classList.add('gazing');\n        setTimeout(() => {\n          interactiveElement.click();\n          interactiveElement.classList.remove('gazing');\n        }, 1000);\n      }\n    }\n  }, [calibrating]);\n  useEffect(() => {\n    if (webgazerReady && webgazerInstance.current) {\n      const currentWebgazer = webgazerInstance.current;\n      const gazeListener = (data, elapsedTime) => {\n        if (data == null) return;\n        handleGaze(data);\n      };\n      currentWebgazer.setGazeListener(gazeListener);\n      return () => {\n        if (webgazerReady && currentWebgazer) {\n          currentWebgazer.clearGazeListener();\n        }\n      };\n    }\n  }, [handleGaze, webgazerReady, webgazerInstance]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calibration-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCalibration,\n        children: \"\\u0E40\\u0E23\\u0E34\\u0E48\\u0E21\\u0E04\\u0E32\\u0E25\\u0E34\\u0E40\\u0E1A\\u0E23\\u0E15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCalibration,\n        children: \"\\u0E2B\\u0E22\\u0E38\\u0E14\\u0E04\\u0E32\\u0E25\\u0E34\\u0E40\\u0E1A\\u0E23\\u0E15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), calibrating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calibration-points\",\n      children: calibrationPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calibration-point\",\n        style: {\n          top: point.y,\n          left: point.x,\n          backgroundColor: point.color\n        },\n        onClick: e => handleCalibrationClick(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(WebGazerWrapper, \"FIXA4g4LNiy4qy9B9OcUNacrySQ=\", false, function () {\n  return [useWebGazerContext];\n});\n_c = WebGazerWrapper;\nexport default WebGazerWrapper;\nvar _c;\n$RefreshReg$(_c, \"WebGazerWrapper\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useWebGazerContext","jsxDEV","_jsxDEV","Fragment","_Fragment","WebGazerWrapper","children","_s","webgazerInstance","webgazerReady","calibrating","setCalibrating","calibrationPoints","setCalibrationPoints","clickCounts","setClickCounts","Array","fill","startCalibration","current","clearData","showFaceOverlay","generateCalibrationPoints","stopCalibration","positions","x","y","map","pos","color","handleCalibrationClick","index","e","clientX","clientY","recordScreenPosition","newClickCounts","newCalibrationPoints","handleGaze","data","element","document","elementFromPoint","interactiveElement","closest","classList","add","setTimeout","click","remove","currentWebgazer","gazeListener","elapsedTime","setGazeListener","clearGazeListener","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","point","style","top","left","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerWrapper.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport './WebGazerWrapper.css';\n\nconst WebGazerWrapper = ({ children }) => {\n  const { webgazerInstance, webgazerReady } = useWebGazerContext();\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(15).fill(0));\n\n  const startCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(true);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(15).fill(0));\n    }\n  }, [webgazerInstance]);\n\n  const stopCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  }, [webgazerInstance]);\n\n  const generateCalibrationPoints = () => {\n    const positions = [\n      { x: 12, y: 25 }, { x: 12, y: 48 }, { x: 12, y: 69 }, { x: 12, y: 92 }, \n      { x: 35, y: 45 }, { x: 61, y: 45 }, { x: 87, y: 45 },\n      { x: 35, y: 67 }, { x: 61, y: 67 }, { x: 87, y: 67 },\n      { x: 35, y: 86 }, { x: 61, y: 86 }, { x: 87, y: 86 }, \n      { x: 89, y: 28 }, { x: 95, y: 7 }\n    ];\n    return positions.map(pos => ({ x: `${pos.x}%`, y: `${pos.y}%`, color: 'red' }));\n  };\n\n  const handleCalibrationClick = useCallback((index, e) => {\n    if (webgazerInstance.current) {\n      const { clientX, clientY } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n\n      if (newClickCounts[index] >= 3) {\n        const newCalibrationPoints = [...calibrationPoints];\n        newCalibrationPoints[index].color = 'yellow';\n        setCalibrationPoints(newCalibrationPoints);\n      }\n    }\n  }, [clickCounts, calibrationPoints, webgazerInstance]);\n\n  const handleGaze = useCallback((data) => {\n    if (data == null || calibrating) return;\n\n    const { x, y } = data;\n    const element = document.elementFromPoint(x, y);\n    \n    if (element) {\n      const interactiveElement = element.closest('button, a, [role=\"button\"]');\n      \n      if (interactiveElement) {\n        interactiveElement.classList.add('gazing');\n        setTimeout(() => {\n          interactiveElement.click();\n          interactiveElement.classList.remove('gazing');\n        }, 1000);\n      }\n    }\n  }, [calibrating]);\n\n  useEffect(() => {\n    if (webgazerReady && webgazerInstance.current) {\n      const currentWebgazer = webgazerInstance.current;\n  \n      const gazeListener = (data, elapsedTime) => {\n        if (data == null) return;\n        handleGaze(data);\n      };\n  \n      currentWebgazer.setGazeListener(gazeListener);\n  \n      return () => {\n        if (webgazerReady && currentWebgazer) {\n          currentWebgazer.clearGazeListener();\n        }\n      };\n    }\n  }, [handleGaze, webgazerReady, webgazerInstance]);\n\n  return (\n    <>\n      {children}\n      <div className=\"calibration-container\">\n        <button onClick={startCalibration}>เริ่มคาลิเบรต</button>\n        <button onClick={stopCalibration}>หยุดคาลิเบรต</button>\n      </div>\n      {calibrating && (\n        <div className=\"calibration-points\">\n          {calibrationPoints.map((point, index) => (\n            <div \n              key={index} \n              className=\"calibration-point\"\n              style={{ \n                top: point.y, \n                left: point.x, \n                backgroundColor: point.color\n              }}\n              onClick={(e) => handleCalibrationClick(index, e)}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default WebGazerWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}