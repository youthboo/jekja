{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/pages/CategoryPage.js\",\n  _s = $RefreshSig$();\n// pages/CategoryPage.js\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport './CategoryPage.css';\nimport deleteIcon from '../assets/delete.png';\nimport alertIcon from '../assets/bell.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const letterMap = {\n    // ... existing letterMap content\n  };\n  const letters = letterMap[id] || [];\n  const {\n    webgazerReady,\n    initializeWebGazer\n  } = useWebGazerContext();\n  const handleSend = async () => {\n    // ... existing handleSend code\n  };\n  const handleAlertClick = () => {\n    setShowPopup(true);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  const handleConfirmAlert = async () => {\n    // ... existing handleConfirmAlert code\n  };\n  const handleGaze = useCallback(data => {\n    // ... existing handleGaze code\n  }, []);\n  useEffect(() => {\n    initializeWebGazer(handleGaze);\n  }, [initializeWebGazer, handleGaze]);\n  if (!webgazerReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E42\\u0E2B\\u0E25\\u0E14 WebGazer...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryPage, \"r6MRhvyYn+CYL7cDfUKcL6tnwGY=\", false, function () {\n  return [useParams, useWebGazerContext];\n});\n_c = CategoryPage;\nexport default CategoryPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryPage\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useParams","useWebGazerContext","deleteIcon","alertIcon","jsxDEV","_jsxDEV","CategoryPage","_s","id","message","setMessage","showPopup","setShowPopup","letterMap","letters","webgazerReady","initializeWebGazer","handleSend","handleAlertClick","handlePopupClose","handleConfirmAlert","handleGaze","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/pages/CategoryPage.js"],"sourcesContent":["// pages/CategoryPage.js\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport './CategoryPage.css';\nimport deleteIcon from '../assets/delete.png';\nimport alertIcon from '../assets/bell.png';\n\nconst CategoryPage = () => {\n  const { id } = useParams();\n  const [message, setMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n\n  const letterMap = {\n    // ... existing letterMap content\n  };\n\n  const letters = letterMap[id] || [];\n\n  const { webgazerReady, initializeWebGazer } = useWebGazerContext();\n\n  const handleSend = async () => {\n    // ... existing handleSend code\n  };\n\n  const handleAlertClick = () => {\n    setShowPopup(true);\n  };\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n\n  const handleConfirmAlert = async () => {\n    // ... existing handleConfirmAlert code\n  };\n\n  const handleGaze = useCallback((data) => {\n    // ... existing handleGaze code\n  }, []);\n\n  useEffect(() => {\n    initializeWebGazer(handleGaze);\n  }, [initializeWebGazer, handleGaze]);\n\n  if (!webgazerReady) {\n    return <div>กำลังโหลด WebGazer...</div>;\n  }\n\n  return (\n    <div className=\"category-page\">\n      {/* ... existing CategoryPage content */}\n    </div>\n  );\n};\n\nexport default CategoryPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,OAAO,oBAAoB;AAC3B,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,SAAS,GAAG;IAChB;EAAA,CACD;EAED,MAAMC,OAAO,GAAGD,SAAS,CAACL,EAAE,CAAC,IAAI,EAAE;EAEnC,MAAM;IAAEO,aAAa;IAAEC;EAAmB,CAAC,GAAGf,kBAAkB,CAAC,CAAC;EAElE,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;EAAA,CACD;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC;EAAA,CACD;EAED,MAAMC,UAAU,GAAGvB,WAAW,CAAEwB,IAAI,IAAK;IACvC;EAAA,CACD,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACdiB,kBAAkB,CAACK,UAAU,CAAC;EAChC,CAAC,EAAE,CAACL,kBAAkB,EAAEK,UAAU,CAAC,CAAC;EAEpC,IAAI,CAACN,aAAa,EAAE;IAClB,oBAAOV,OAAA;MAAAkB,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC;EAAe;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CID,YAAY;EAAA,QACDN,SAAS,EAUsBC,kBAAkB;AAAA;AAAA4B,EAAA,GAX5DvB,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}