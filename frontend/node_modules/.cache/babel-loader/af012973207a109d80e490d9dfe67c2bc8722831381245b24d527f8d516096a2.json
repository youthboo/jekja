{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// hooks/WebGazerContext.js\n\nimport React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebGazerContext = /*#__PURE__*/createContext();\nexport const WebGazerProvider = ({\n  children\n}) => {\n  _s();\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const initializeWebGazer = useCallback(async () => {\n    try {\n      await window.webgazer.setRegression('ridge').setTracker('clmtrackr').begin();\n      webgazerInstance.current = window.webgazer;\n      setWebgazerReady(true);\n      window.webgazer.showVideo(false);\n      window.webgazer.showFaceOverlay(false);\n      window.webgazer.showFaceFeedbackBox(false);\n    } catch (error) {\n      console.error('Failed to initialize webgazer:', error);\n    }\n  }, []);\n  useEffect(() => {\n    initializeWebGazer();\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, [initializeWebGazer]);\n  return /*#__PURE__*/_jsxDEV(WebGazerContext.Provider, {\n    value: {\n      webgazerReady,\n      webgazerInstance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WebGazerProvider, \"2MLbex3CCygvTErm2K3ulgAAMRk=\");\n_c = WebGazerProvider;\nexport const useWebGazerContext = () => {\n  _s2();\n  const context = useContext(WebGazerContext);\n  if (!context) {\n    throw new Error('useWebGazerContext must be used within a WebGazerProvider');\n  }\n  return context;\n};\n_s2(useWebGazerContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WebGazerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","WebGazerContext","WebGazerProvider","children","_s","webgazerReady","setWebgazerReady","webgazerInstance","initializeWebGazer","window","webgazer","setRegression","setTracker","begin","current","showVideo","showFaceOverlay","showFaceFeedbackBox","error","console","end","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebGazerContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerContext.js"],"sourcesContent":["// hooks/WebGazerContext.js\n\nimport React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\n\nconst WebGazerContext = createContext();\n\nexport const WebGazerProvider = ({ children }) => {\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n\n  const initializeWebGazer = useCallback(async () => {\n    try {\n      await window.webgazer.setRegression('ridge').setTracker('clmtrackr').begin();\n      webgazerInstance.current = window.webgazer;\n      setWebgazerReady(true);\n\n      window.webgazer.showVideo(false);\n      window.webgazer.showFaceOverlay(false);\n      window.webgazer.showFaceFeedbackBox(false);\n    } catch (error) {\n      console.error('Failed to initialize webgazer:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    initializeWebGazer();\n\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, [initializeWebGazer]);\n\n  return (\n    <WebGazerContext.Provider value={{ webgazerReady, webgazerInstance }}>\n      {children}\n    </WebGazerContext.Provider>\n  );\n};\n\nexport const useWebGazerContext = () => {\n  const context = useContext(WebGazerContext);\n  if (!context) {\n    throw new Error('useWebGazerContext must be used within a WebGazerProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnG,MAAMC,eAAe,gBAAGR,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMS,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMY,gBAAgB,GAAGX,MAAM,CAAC,IAAI,CAAC;EAErC,MAAMY,kBAAkB,GAAGX,WAAW,CAAC,YAAY;IACjD,IAAI;MACF,MAAMY,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,UAAU,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC,CAAC;MAC5EN,gBAAgB,CAACO,OAAO,GAAGL,MAAM,CAACC,QAAQ;MAC1CJ,gBAAgB,CAAC,IAAI,CAAC;MAEtBG,MAAM,CAACC,QAAQ,CAACK,SAAS,CAAC,KAAK,CAAC;MAChCN,MAAM,CAACC,QAAQ,CAACM,eAAe,CAAC,KAAK,CAAC;MACtCP,MAAM,CAACC,QAAQ,CAACO,mBAAmB,CAAC,KAAK,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACdU,kBAAkB,CAAC,CAAC;IAEpB,OAAO,MAAM;MACX,IAAID,gBAAgB,CAACO,OAAO,IAAI,OAAOP,gBAAgB,CAACO,OAAO,CAACM,GAAG,KAAK,UAAU,EAAE;QAClF,IAAI;UACFb,gBAAgB,CAACO,OAAO,CAACM,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACV,kBAAkB,CAAC,CAAC;EAExB,oBACER,OAAA,CAACC,eAAe,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,aAAa;MAAEE;IAAiB,CAAE;IAAAJ,QAAA,EAClEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACtB,EAAA,CArCWF,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAuC7B,OAAO,MAAM0B,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtC,MAAMC,OAAO,GAAGpC,UAAU,CAACO,eAAe,CAAC;EAC3C,IAAI,CAAC6B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,kBAAkB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}