{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useWebGazer = () => {\n  _s();\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(19).fill(0));\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const gazeTimers = useRef({});\n  const handleGaze = useCallback(data => {\n    if (data == null || calibrating) return;\n    const {\n      x,\n      y\n    } = data;\n    Object.keys(gazeTimers.current).forEach(buttonId => {\n      const button = document.getElementById(buttonId);\n      if (button) {\n        const rect = button.getBoundingClientRect();\n        if (x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom) {\n          if (!gazeTimers.current[buttonId].isGazing) {\n            gazeTimers.current[buttonId].isGazing = true;\n            gazeTimers.current[buttonId].timer = setTimeout(() => {\n              console.log(`Gaze click on button ${buttonId}`);\n              // You can dispatch a custom event here if you want to handle the gaze click in your components\n            }, 1000); // 1 second gaze to trigger click\n          }\n        } else {\n          gazeTimers.current[buttonId].isGazing = false;\n          if (gazeTimers.current[buttonId].timer) {\n            clearTimeout(gazeTimers.current[buttonId].timer);\n          }\n        }\n      }\n    });\n  }, [calibrating]);\n  useEffect(() => {\n    const initWebgazer = async () => {\n      try {\n        await window.webgazer.setRegression('ridge').setTracker('clmtrackr').setGazeListener(handleGaze).begin();\n        webgazerInstance.current = window.webgazer;\n        setWebgazerReady(true);\n        window.webgazer.showVideo(true);\n        window.webgazer.showFaceOverlay(true);\n        window.webgazer.showFaceFeedbackBox(true);\n      } catch (error) {\n        console.error('Failed to initialize webgazer:', error);\n      }\n    };\n    initWebgazer();\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, [handleGaze]);\n  const startCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(false);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(19).fill(0));\n    }\n  };\n  const stopCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  };\n  const generateCalibrationPoints = () => {\n    const positions = [{\n      x: 10,\n      y: 20\n    }, {\n      x: 10,\n      y: 35\n    }, {\n      x: 10,\n      y: 50\n    }, {\n      x: 10,\n      y: 65\n    }, {\n      x: 10,\n      y: 80\n    }, {\n      x: 10,\n      y: 95\n    }, {\n      x: 30,\n      y: 50\n    }, {\n      x: 50,\n      y: 50\n    }, {\n      x: 70,\n      y: 50\n    }, {\n      x: 90,\n      y: 50\n    }, {\n      x: 30,\n      y: 65\n    }, {\n      x: 50,\n      y: 65\n    }, {\n      x: 70,\n      y: 65\n    }, {\n      x: 90,\n      y: 65\n    }, {\n      x: 30,\n      y: 85\n    }, {\n      x: 50,\n      y: 85\n    }, {\n      x: 70,\n      y: 85\n    }, {\n      x: 95,\n      y: 30\n    }, {\n      x: 87,\n      y: 3\n    }];\n    return positions.map(pos => ({\n      x: `${pos.x}%`,\n      y: `${pos.y}%`\n    }));\n  };\n  const handleCalibrationClick = (index, e) => {\n    if (webgazerInstance.current) {\n      const {\n        clientX,\n        clientY\n      } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n      const newCalibrationPoints = [...calibrationPoints];\n      if (newClickCounts[index] >= 3) {\n        newCalibrationPoints[index].color = 'yellow';\n      } else {\n        newCalibrationPoints[index].color = 'red';\n      }\n      setCalibrationPoints(newCalibrationPoints);\n    }\n  };\n  return {\n    calibrating,\n    calibrationPoints,\n    webgazerReady,\n    gazeTimers,\n    startCalibration,\n    stopCalibration,\n    handleCalibrationClick\n  };\n};\n_s(useWebGazer, \"vjVJr9rLU8zlsBh8BgkEvgqSg30=\");\nexport default useWebGazer;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebGazer","_s","calibrating","setCalibrating","calibrationPoints","setCalibrationPoints","clickCounts","setClickCounts","Array","fill","webgazerReady","setWebgazerReady","webgazerInstance","gazeTimers","handleGaze","data","x","y","Object","keys","current","forEach","buttonId","button","document","getElementById","rect","getBoundingClientRect","left","right","top","bottom","isGazing","timer","setTimeout","console","log","clearTimeout","initWebgazer","window","webgazer","setRegression","setTracker","setGazeListener","begin","showVideo","showFaceOverlay","showFaceFeedbackBox","error","end","startCalibration","clearData","generateCalibrationPoints","stopCalibration","positions","map","pos","handleCalibrationClick","index","e","clientX","clientY","recordScreenPosition","newClickCounts","newCalibrationPoints","color"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/components/WebGazer.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebGazer = () => {\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(19).fill(0));\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const gazeTimers = useRef({});\n\n  const handleGaze = useCallback((data) => {\n    if (data == null || calibrating) return;\n\n    const { x, y } = data;\n    Object.keys(gazeTimers.current).forEach(buttonId => {\n      const button = document.getElementById(buttonId);\n      if (button) {\n        const rect = button.getBoundingClientRect();\n        if (\n          x >= rect.left &&\n          x <= rect.right &&\n          y >= rect.top &&\n          y <= rect.bottom\n        ) {\n          if (!gazeTimers.current[buttonId].isGazing) {\n            gazeTimers.current[buttonId].isGazing = true;\n            gazeTimers.current[buttonId].timer = setTimeout(() => {\n              console.log(`Gaze click on button ${buttonId}`);\n              // You can dispatch a custom event here if you want to handle the gaze click in your components\n            }, 1000); // 1 second gaze to trigger click\n          }\n        } else {\n          gazeTimers.current[buttonId].isGazing = false;\n          if (gazeTimers.current[buttonId].timer) {\n            clearTimeout(gazeTimers.current[buttonId].timer);\n          }\n        }\n      }\n    });\n  }, [calibrating]);\n\n  useEffect(() => {\n    const initWebgazer = async () => {\n      try {\n        await window.webgazer.setRegression('ridge').setTracker('clmtrackr')\n          .setGazeListener(handleGaze).begin();\n        webgazerInstance.current = window.webgazer;\n        setWebgazerReady(true);\n    \n        window.webgazer.showVideo(true);\n        window.webgazer.showFaceOverlay(true);\n        window.webgazer.showFaceFeedbackBox(true);\n    \n      } catch (error) {\n        console.error('Failed to initialize webgazer:', error);\n      }\n    };\n    \n    initWebgazer();\n    \n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, [handleGaze]);\n\n  const startCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(false);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(19).fill(0));\n    }\n  };\n\n  const stopCalibration = () => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  };\n\n  const generateCalibrationPoints = () => {\n    const positions = [\n      { x: 10, y: 20 }, { x: 10, y: 35 }, { x: 10, y: 50 }, { x: 10, y: 65 }, { x: 10, y: 80 },\n      { x: 10, y: 95 }, { x: 30, y: 50 }, { x: 50, y: 50 }, { x: 70, y: 50 }, { x: 90, y: 50 },\n      { x: 30, y: 65 }, { x: 50, y: 65 }, { x: 70, y: 65 }, { x: 90, y: 65 }, { x: 30, y: 85 },\n      { x: 50, y: 85 }, { x: 70, y: 85 }, { x: 95, y: 30 }, { x: 87, y: 3 },\n    ];\n    return positions.map(pos => ({ x: `${pos.x}%`, y: `${pos.y}%` }));\n  };\n\n  const handleCalibrationClick = (index, e) => {\n    if (webgazerInstance.current) {\n      const { clientX, clientY } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      const newClickCounts = [...clickCounts];\n      newClickCounts[index] += 1;\n      setClickCounts(newClickCounts);\n\n      const newCalibrationPoints = [...calibrationPoints];\n      if (newClickCounts[index] >= 3) {\n        newCalibrationPoints[index].color = 'yellow';\n      } else {\n        newCalibrationPoints[index].color = 'red';\n      }\n      setCalibrationPoints(newCalibrationPoints);\n    }\n  };\n\n\n  return {\n    calibrating,\n    calibrationPoints,\n    webgazerReady,\n    gazeTimers,\n    startCalibration,\n    stopCalibration,\n    handleCalibrationClick\n  };\n};\n\nexport default useWebGazer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}