{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './HomePage.css';\nimport alertIcon from '../assets/bell.png';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const {\n    webgazerInstance,\n    gazeTimers\n  } = useWebGazerContext();\n  const suggestions = ['สวัสดี', 'หิวข้าว', 'เข้าห้องน้ำ', 'สบายดีไหม', 'ขอบคุณ', 'ขอโทษ', 'คิดถึง', 'รัก', 'ไปไหน'];\n  const handleSend = async () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n  const handleAlertClick = () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n  const handlePopupClose = () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n  const handleConfirmAlert = async () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n  const handleGaze = useCallback((data, timestamp, timers) => {\n    const {\n      x,\n      y\n    } = data;\n    const buttons = document.querySelectorAll('.suggestion-button, .alert-icon');\n    buttons.forEach(button => {\n      const rect = button.getBoundingClientRect();\n      const isGazing = x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n      if (isGazing) {\n        button.classList.add('gazing');\n        if (!timers[button.innerText]) {\n          timers[button.innerText] = timestamp;\n        } else if (timestamp - timers[button.innerText] > 1000) {\n          // 1 second\n          if (button.classList.contains('alert-icon')) {\n            handleAlertClick();\n          } else {\n            setMessage(button.innerText);\n          }\n          delete timers[button.innerText];\n        }\n      } else {\n        button.classList.remove('gazing');\n        delete timers[button.innerText];\n      }\n    });\n  }, [setMessage, handleAlertClick]);\n  useEffect(() => {\n    const instance = webgazerInstance.current;\n    if (instance) {\n      instance.setGazeListener((data, timestamp) => handleGaze(data, timestamp, gazeTimers.current));\n    }\n    return () => {\n      if (instance) {\n        instance.clearGazeListener();\n      }\n    };\n  }, [handleGaze, webgazerInstance, gazeTimers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"qXJZuXYg8vswWJU+uSmro61wVV0=\", false, function () {\n  return [useWebGazerContext];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","alertIcon","useWebGazerContext","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","showPopup","setShowPopup","webgazerInstance","gazeTimers","suggestions","handleSend","handleAlertClick","handlePopupClose","handleConfirmAlert","handleGaze","data","timestamp","timers","x","y","buttons","document","querySelectorAll","forEach","button","rect","getBoundingClientRect","isGazing","left","right","top","bottom","classList","add","innerText","contains","remove","instance","current","setGazeListener","clearGazeListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport './HomePage.css';\nimport alertIcon from '../assets/bell.png'; \nimport { useWebGazerContext } from '../hooks/WebGazerContext';\n\nconst HomePage = () => {\n  const [message, setMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const { webgazerInstance, gazeTimers } = useWebGazerContext();\n\n  const suggestions = ['สวัสดี', 'หิวข้าว', 'เข้าห้องน้ำ', 'สบายดีไหม', 'ขอบคุณ', 'ขอโทษ', 'คิดถึง', 'รัก', 'ไปไหน'];\n\n  const handleSend = async () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n\n  const handleAlertClick = () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n\n  const handlePopupClose = () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n\n  const handleConfirmAlert = async () => {\n    // ... (ไม่เปลี่ยนแปลง)\n  };\n\n  const handleGaze = useCallback((data, timestamp, timers) => {\n    const { x, y } = data;\n    const buttons = document.querySelectorAll('.suggestion-button, .alert-icon');\n    \n    buttons.forEach(button => {\n      const rect = button.getBoundingClientRect();\n      const isGazing = \n        x >= rect.left &&\n        x <= rect.right &&\n        y >= rect.top &&\n        y <= rect.bottom;\n\n      if (isGazing) {\n        button.classList.add('gazing');\n        if (!timers[button.innerText]) {\n          timers[button.innerText] = timestamp;\n        } else if (timestamp - timers[button.innerText] > 1000) { // 1 second\n          if (button.classList.contains('alert-icon')) {\n            handleAlertClick();\n          } else {\n            setMessage(button.innerText);\n          }\n          delete timers[button.innerText];\n        }\n      } else {\n        button.classList.remove('gazing');\n        delete timers[button.innerText];\n      }\n    });\n  }, [setMessage, handleAlertClick]);\n\n  useEffect(() => {\n    const instance = webgazerInstance.current;\n    if (instance) {\n      instance.setGazeListener((data, timestamp) => handleGaze(data, timestamp, gazeTimers.current));\n    }\n\n    return () => {\n      if (instance) {\n        instance.clearGazeListener();\n      }\n    };\n  }, [handleGaze, webgazerInstance, gazeTimers]);\n\n  return (\n    <div className=\"home-page\">\n      {/* ... (ไม่เปลี่ยนแปลง) */}\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}