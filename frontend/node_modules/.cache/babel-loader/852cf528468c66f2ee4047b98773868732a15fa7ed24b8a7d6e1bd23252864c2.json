{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/pages/CalibrationPage.js\",\n  _s = $RefreshSig$();\n// pages/CalibrationPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport './CalibrationPage.css'; // สไตล์สำหรับหน้าการ calibrate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalibrationPage = () => {\n  _s();\n  const {\n    webgazerInstance\n  } = useWebGazerContext();\n  const [isCalibrating, setIsCalibrating] = useState(false);\n  const [currentPoint, setCurrentPoint] = useState(null);\n  const calibrationPoints = useRef([]);\n  useEffect(() => {\n    const instance = webgazerInstance.current;\n    if (instance) {\n      if (isCalibrating) {\n        instance.startCalibration && instance.startCalibration();\n      } else {\n        instance.stopCalibration && instance.stopCalibration();\n      }\n    }\n    return () => {\n      if (instance && !isCalibrating) {\n        instance.stopCalibration && instance.stopCalibration();\n      }\n    };\n  }, [isCalibrating, webgazerInstance]);\n  const handleStartCalibration = () => {\n    setIsCalibrating(true);\n    // Define calibration points here\n    const points = [{\n      x: 100,\n      y: 100\n    }, {\n      x: 200,\n      y: 100\n    }, {\n      x: 300,\n      y: 100\n    }, {\n      x: 400,\n      y: 100\n    }, {\n      x: 250,\n      y: 250\n    }];\n    setCurrentPoint(points[0]);\n    calibrationPoints.current = points;\n  };\n  const handleCalibrationClick = index => {\n    // Update calibration points after click\n    if (index < calibrationPoints.current.length - 1) {\n      setCurrentPoint(calibrationPoints.current[index + 1]);\n    } else {\n      setIsCalibrating(false);\n      alert('Calibration complete!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calibration-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calibration Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartCalibration,\n      children: \"Start Calibration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isCalibrating && currentPoint && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calibration-point\",\n      style: {\n        left: `${currentPoint.x}px`,\n        top: `${currentPoint.y}px`\n      },\n      onClick: () => handleCalibrationClick(calibrationPoints.current.indexOf(currentPoint))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CalibrationPage, \"mhlfHXinRQjkMytDg346WuKY0Vs=\", false, function () {\n  return [useWebGazerContext];\n});\n_c = CalibrationPage;\nexport default CalibrationPage;\nvar _c;\n$RefreshReg$(_c, \"CalibrationPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebGazerContext","jsxDEV","_jsxDEV","CalibrationPage","_s","webgazerInstance","isCalibrating","setIsCalibrating","currentPoint","setCurrentPoint","calibrationPoints","instance","current","startCalibration","stopCalibration","handleStartCalibration","points","x","y","handleCalibrationClick","index","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","left","top","indexOf","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/pages/CalibrationPage.js"],"sourcesContent":["// pages/CalibrationPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useWebGazerContext } from '../hooks/WebGazerContext';\nimport './CalibrationPage.css'; // สไตล์สำหรับหน้าการ calibrate\n\nconst CalibrationPage = () => {\n  const { webgazerInstance } = useWebGazerContext();\n  const [isCalibrating, setIsCalibrating] = useState(false);\n  const [currentPoint, setCurrentPoint] = useState(null);\n  const calibrationPoints = useRef([]);\n\n  useEffect(() => {\n    const instance = webgazerInstance.current;\n    if (instance) {\n      if (isCalibrating) {\n        instance.startCalibration && instance.startCalibration();\n      } else {\n        instance.stopCalibration && instance.stopCalibration();\n      }\n    }\n\n    return () => {\n      if (instance && !isCalibrating) {\n        instance.stopCalibration && instance.stopCalibration();\n      }\n    };\n  }, [isCalibrating, webgazerInstance]);\n\n  const handleStartCalibration = () => {\n    setIsCalibrating(true);\n    // Define calibration points here\n    const points = [\n      { x: 100, y: 100 },\n      { x: 200, y: 100 },\n      { x: 300, y: 100 },\n      { x: 400, y: 100 },\n      { x: 250, y: 250 }\n    ];\n    setCurrentPoint(points[0]);\n    calibrationPoints.current = points;\n  };\n\n  const handleCalibrationClick = (index) => {\n    // Update calibration points after click\n    if (index < calibrationPoints.current.length - 1) {\n      setCurrentPoint(calibrationPoints.current[index + 1]);\n    } else {\n      setIsCalibrating(false);\n      alert('Calibration complete!');\n    }\n  };\n\n  return (\n    <div className=\"calibration-page\">\n      <h2>Calibration Page</h2>\n      <button onClick={handleStartCalibration}>\n        Start Calibration\n      </button>\n      {isCalibrating && currentPoint && (\n        <div\n          className=\"calibration-point\"\n          style={{ left: `${currentPoint.x}px`, top: `${currentPoint.y}px` }}\n          onClick={() => handleCalibrationClick(calibrationPoints.current.indexOf(currentPoint))}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CalibrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}