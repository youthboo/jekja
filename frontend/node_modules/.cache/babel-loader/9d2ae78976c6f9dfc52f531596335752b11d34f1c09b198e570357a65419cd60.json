{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebGazerContext = /*#__PURE__*/createContext();\nexport const WebGazerProvider = ({\n  children\n}) => {\n  _s();\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  // Remove this line\n  // const [clickCounts, setClickCounts] = useState(Array(15).fill(0));\n  const [lastGazeTime, setLastGazeTime] = useState(0);\n  const initializeWebGazer = useCallback(async () => {\n    try {\n      await window.webgazer.setRegression('ridge').setTracker('clmtrackr').begin();\n      webgazerInstance.current = window.webgazer;\n      setWebgazerReady(true);\n\n      // Hide WebGazer UI elements\n      const videoFeed = document.getElementById('webgazerVideoFeed');\n      const faceOverlay = document.getElementById('webgazerFaceOverlay');\n      const feedbackBox = document.getElementById('webgazerFaceFeedbackBox');\n      if (videoFeed) videoFeed.style.display = 'none';\n      if (faceOverlay) faceOverlay.style.display = 'none';\n      if (feedbackBox) feedbackBox.style.display = 'none';\n    } catch (error) {\n      console.error('Failed to initialize webgazer:', error);\n    }\n  }, []);\n  const startCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(true);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      // Remove this line\n      // setClickCounts(Array(15).fill(0));\n    }\n  }, []);\n  const stopCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  }, []);\n  const generateCalibrationPoints = () => {\n    const positions = [{\n      x: 12,\n      y: 25\n    }, {\n      x: 12,\n      y: 48\n    }, {\n      x: 12,\n      y: 69\n    }, {\n      x: 12,\n      y: 92\n    }, {\n      x: 35,\n      y: 45\n    }, {\n      x: 61,\n      y: 45\n    }, {\n      x: 87,\n      y: 45\n    }, {\n      x: 35,\n      y: 67\n    }, {\n      x: 61,\n      y: 67\n    }, {\n      x: 87,\n      y: 67\n    }, {\n      x: 35,\n      y: 86\n    }, {\n      x: 61,\n      y: 86\n    }, {\n      x: 87,\n      y: 86\n    }, {\n      x: 89,\n      y: 28\n    }, {\n      x: 95,\n      y: 7\n    }];\n    return positions.map(pos => ({\n      x: `${pos.x}%`,\n      y: `${pos.y}%`,\n      color: 'red'\n    }));\n  };\n  const handleCalibrationClick = useCallback((index, e) => {\n    if (webgazerInstance.current) {\n      const {\n        clientX,\n        clientY\n      } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      // Remove this block\n      // setClickCounts(prevClickCounts => {\n      //   const newClickCounts = [...prevClickCounts];\n      //   newClickCounts[index] += 1;\n      //   if (newClickCounts[index] >= 3) {\n      //     setCalibrationPoints(prevPoints => {\n      //       const newCalibrationPoints = [...prevPoints];\n      //       newCalibrationPoints[index].color = 'yellow';\n      //       return newCalibrationPoints;\n      //     });\n      //   }\n      //   return newClickCounts;\n      // });\n    }\n  }, []);\n  const handleGaze = useCallback(data => {\n    if (data == null || calibrating) return;\n    const {\n      x,\n      y\n    } = data;\n    const currentTime = Date.now();\n    const timeSinceLastGaze = currentTime - lastGazeTime;\n    if (timeSinceLastGaze >= 1000) {\n      setLastGazeTime(currentTime);\n      const element = document.elementFromPoint(x, y);\n      if (element) {\n        const interactiveElement = element.closest('button, a, [role=\"button\"]');\n        if (interactiveElement) {\n          interactiveElement.classList.add('gazing');\n          setTimeout(() => {\n            interactiveElement.click();\n            interactiveElement.classList.remove('gazing');\n          }, 100);\n        }\n      }\n    }\n  }, [calibrating, lastGazeTime]);\n  useEffect(() => {\n    initializeWebGazer();\n    return () => {\n      var _webgazerInstance$cur;\n      if ((_webgazerInstance$cur = webgazerInstance.current) !== null && _webgazerInstance$cur !== void 0 && _webgazerInstance$cur.end) {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, [initializeWebGazer]);\n  useEffect(() => {\n    if (webgazerReady && webgazerInstance.current) {\n      const currentWebgazer = webgazerInstance.current;\n      const gazeListener = data => {\n        if (data != null) {\n          handleGaze(data);\n        }\n      };\n      currentWebgazer.setGazeListener(gazeListener);\n      return () => {\n        if (webgazerReady && currentWebgazer) {\n          currentWebgazer.clearGazeListener();\n        }\n      };\n    }\n  }, [handleGaze, webgazerReady]);\n  return /*#__PURE__*/_jsxDEV(WebGazerContext.Provider, {\n    value: {\n      webgazerReady,\n      webgazerInstance,\n      calibrating,\n      calibrationPoints,\n      startCalibration,\n      stopCalibration,\n      handleCalibrationClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(WebGazerProvider, \"oAmKOFTxI313UysxCYaBjMsPA54=\");\n_c = WebGazerProvider;\nexport const useWebGazerContext = () => {\n  _s2();\n  const context = useContext(WebGazerContext);\n  if (!context) {\n    throw new Error('useWebGazerContext must be used within a WebGazerProvider');\n  }\n  return context;\n};\n_s2(useWebGazerContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WebGazerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","WebGazerContext","WebGazerProvider","children","_s","webgazerReady","setWebgazerReady","webgazerInstance","calibrating","setCalibrating","calibrationPoints","setCalibrationPoints","lastGazeTime","setLastGazeTime","initializeWebGazer","window","webgazer","setRegression","setTracker","begin","current","videoFeed","document","getElementById","faceOverlay","feedbackBox","style","display","error","console","startCalibration","clearData","showFaceOverlay","generateCalibrationPoints","stopCalibration","positions","x","y","map","pos","color","handleCalibrationClick","index","e","clientX","clientY","recordScreenPosition","handleGaze","data","currentTime","Date","now","timeSinceLastGaze","element","elementFromPoint","interactiveElement","closest","classList","add","setTimeout","click","remove","_webgazerInstance$cur","end","currentWebgazer","gazeListener","setGazeListener","clearGazeListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebGazerContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\n\nconst WebGazerContext = createContext();\n\nexport const WebGazerProvider = ({ children }) => {\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  // Remove this line\n  // const [clickCounts, setClickCounts] = useState(Array(15).fill(0));\n  const [lastGazeTime, setLastGazeTime] = useState(0);\n\n  const initializeWebGazer = useCallback(async () => {\n    try {\n      await window.webgazer.setRegression('ridge').setTracker('clmtrackr').begin();\n      webgazerInstance.current = window.webgazer;\n      setWebgazerReady(true);\n\n      // Hide WebGazer UI elements\n      const videoFeed = document.getElementById('webgazerVideoFeed');\n      const faceOverlay = document.getElementById('webgazerFaceOverlay');\n      const feedbackBox = document.getElementById('webgazerFaceFeedbackBox');\n\n      if (videoFeed) videoFeed.style.display = 'none';\n      if (faceOverlay) faceOverlay.style.display = 'none';\n      if (feedbackBox) feedbackBox.style.display = 'none';\n      \n    } catch (error) {\n      console.error('Failed to initialize webgazer:', error);\n    }\n  }, []);\n\n  const startCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      webgazerInstance.current.showFaceOverlay(true);\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      // Remove this line\n      // setClickCounts(Array(15).fill(0));\n    }\n  }, []);\n\n  const stopCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.showFaceOverlay(false);\n    }\n    setCalibrating(false);\n    setCalibrationPoints([]);\n  }, []);\n\n  const generateCalibrationPoints = () => {\n    const positions = [\n      { x: 12, y: 25 }, { x: 12, y: 48 }, { x: 12, y: 69 }, { x: 12, y: 92 }, \n      { x: 35, y: 45 }, { x: 61, y: 45 }, { x: 87, y: 45 },\n      { x: 35, y: 67 }, { x: 61, y: 67 }, { x: 87, y: 67 },\n      { x: 35, y: 86 }, { x: 61, y: 86 }, { x: 87, y: 86 }, \n      { x: 89, y: 28 }, { x: 95, y: 7 }\n    ];\n    return positions.map(pos => ({ x: `${pos.x}%`, y: `${pos.y}%`, color: 'red' }));\n  };\n\n  const handleCalibrationClick = useCallback((index, e) => {\n    if (webgazerInstance.current) {\n      const { clientX, clientY } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      // Remove this block\n      // setClickCounts(prevClickCounts => {\n      //   const newClickCounts = [...prevClickCounts];\n      //   newClickCounts[index] += 1;\n      //   if (newClickCounts[index] >= 3) {\n      //     setCalibrationPoints(prevPoints => {\n      //       const newCalibrationPoints = [...prevPoints];\n      //       newCalibrationPoints[index].color = 'yellow';\n      //       return newCalibrationPoints;\n      //     });\n      //   }\n      //   return newClickCounts;\n      // });\n    }\n  }, []);\n\n  const handleGaze = useCallback((data) => {\n    if (data == null || calibrating) return;\n\n    const { x, y } = data;\n    const currentTime = Date.now();\n    const timeSinceLastGaze = currentTime - lastGazeTime;\n\n    if (timeSinceLastGaze >= 1000) {\n      setLastGazeTime(currentTime);\n\n      const element = document.elementFromPoint(x, y);\n      \n      if (element) {\n        const interactiveElement = element.closest('button, a, [role=\"button\"]');\n        \n        if (interactiveElement) {\n          interactiveElement.classList.add('gazing');\n          setTimeout(() => {\n            interactiveElement.click();\n            interactiveElement.classList.remove('gazing');\n          }, 100);\n        }\n      }\n    }\n  }, [calibrating, lastGazeTime]);\n\n  useEffect(() => {\n    initializeWebGazer();\n\n    return () => {\n      if (webgazerInstance.current?.end) {\n        try {\n          webgazerInstance.current.end();\n        } catch (error) {\n          console.error('Error while ending webgazer:', error);\n        }\n      }\n    };\n  }, [initializeWebGazer]);\n\n  useEffect(() => {\n    if (webgazerReady && webgazerInstance.current) {\n      const currentWebgazer = webgazerInstance.current;\n  \n      const gazeListener = (data) => {\n        if (data != null) {\n          handleGaze(data);\n        }\n      };\n  \n      currentWebgazer.setGazeListener(gazeListener);\n  \n      return () => {\n        if (webgazerReady && currentWebgazer) {\n          currentWebgazer.clearGazeListener();\n        }\n      };\n    }\n  }, [handleGaze, webgazerReady]);\n\n  return (\n    <WebGazerContext.Provider value={{ webgazerReady, webgazerInstance, calibrating, calibrationPoints, startCalibration, stopCalibration, handleCalibrationClick }}>\n      {children}\n    </WebGazerContext.Provider>\n  );\n};\n\nexport const useWebGazerContext = () => {\n  const context = useContext(WebGazerContext);\n  if (!context) {\n    throw new Error('useWebGazerContext must be used within a WebGazerProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}