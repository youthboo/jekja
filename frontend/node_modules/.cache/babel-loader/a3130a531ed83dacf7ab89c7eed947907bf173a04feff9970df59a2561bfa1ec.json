{"ast":null,"code":"var _jsxFileName = \"/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebGazerContext = /*#__PURE__*/createContext();\nexport const WebGazerProvider = ({\n  children\n}) => {\n  _s();\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(15).fill(0));\n  const [lastGazeTime, setLastGazeTime] = useState(0);\n  const [isGazing, setIsGazing] = useState(false);\n  const [gazeTarget, setGazeTarget] = useState(null);\n  const initializeWebGazer = useCallback(async () => {\n    try {\n      await window.webgazer.setRegression('ridge').setTracker('TFFacemesh').setGazeListener((data, clock) => {\n        if (data == null || calibrating) return;\n        handleGaze(data, clock); // เรียกใช้ handleGaze\n      }).begin();\n      webgazerInstance.current = window.webgazer;\n      setWebgazerReady(true);\n\n      // ซ่อน UI ของ WebGazer\n      window.webgazer.showVideoPreview(false).showPredictionPoints(false);\n\n      // โหลดข้อมูล calibration ที่บันทึกไว้\n      const savedData = localStorage.getItem('webgazerGlobalData');\n      if (savedData) {\n        window.webgazer.loadGlobalData(JSON.parse(savedData));\n      }\n    } catch (error) {\n      console.error('Failed to initialize webgazer:', error);\n    }\n  }, [calibrating, handleGaze]); // เพิ่ม handleGaze ใน dependency\n\n  // ฟังก์ชันสำหรับเริ่มคาลิเบรต\n  const startCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(15).fill(0));\n    }\n  }, []);\n\n  // ฟังก์ชันสำหรับหยุดคาลิเบรต\n  const stopCalibration = useCallback(() => {\n    setCalibrating(false);\n    setCalibrationPoints([]);\n    // บันทึกข้อมูล calibration\n    const calibrationData = JSON.stringify(window.webgazer.getGlobalData());\n    localStorage.setItem('webgazerGlobalData', calibrationData);\n  }, []);\n\n  // ฟังก์ชันสำหรับสร้างจุดคาลิเบรต\n  const generateCalibrationPoints = () => {\n    const positions = [{\n      x: 12,\n      y: 25\n    }, {\n      x: 12,\n      y: 48\n    }, {\n      x: 12,\n      y: 69\n    }, {\n      x: 12,\n      y: 92\n    }, {\n      x: 35,\n      y: 45\n    }, {\n      x: 61,\n      y: 45\n    }, {\n      x: 87,\n      y: 45\n    }, {\n      x: 35,\n      y: 67\n    }, {\n      x: 61,\n      y: 67\n    }, {\n      x: 87,\n      y: 67\n    }, {\n      x: 35,\n      y: 86\n    }, {\n      x: 61,\n      y: 86\n    }, {\n      x: 87,\n      y: 86\n    }, {\n      x: 89,\n      y: 28\n    }, {\n      x: 95,\n      y: 7\n    }];\n    return positions.map(pos => ({\n      x: `${pos.x}%`,\n      y: `${pos.y}%`,\n      color: 'red'\n    }));\n  };\n\n  // ฟังก์ชันสำหรับการคาลิเบรต (คลิกจุด)\n  const handleCalibrationClick = useCallback((index, e) => {\n    if (webgazerInstance.current) {\n      const {\n        clientX,\n        clientY\n      } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      setClickCounts(prevClickCounts => {\n        const newClickCounts = [...prevClickCounts];\n        newClickCounts[index] += 1;\n        if (newClickCounts[index] >= 3) {\n          setCalibrationPoints(prevPoints => {\n            const newCalibrationPoints = [...prevPoints];\n            newCalibrationPoints[index].color = 'yellow';\n            return newCalibrationPoints;\n          });\n        }\n        return newClickCounts;\n      });\n    }\n  }, []);\n\n  // ฟังก์ชันจับการจ้องมอง\n  const handleGaze = useCallback((data, clock) => {\n    if (data == null || calibrating) return;\n    const {\n      x,\n      y\n    } = data;\n    const currentTime = clock;\n    const timeSinceLastGaze = currentTime - lastGazeTime;\n    const element = document.elementFromPoint(x, y);\n    const interactiveElement = element === null || element === void 0 ? void 0 : element.closest('button, a, [role=\"button\"]');\n    if (interactiveElement) {\n      if (gazeTarget !== interactiveElement) {\n        setGazeTarget(interactiveElement);\n        setLastGazeTime(currentTime);\n      } else if (timeSinceLastGaze >= 1000) {\n        setIsGazing(true);\n        interactiveElement.click();\n        setGazeTarget(null);\n        setLastGazeTime(currentTime);\n      }\n    } else {\n      setGazeTarget(null);\n      setIsGazing(false);\n    }\n  }, [calibrating, lastGazeTime, gazeTarget]);\n\n  // เริ่มใช้งาน WebGazer เมื่อ component ถูก mount\n  useEffect(() => {\n    initializeWebGazer();\n    return () => {\n      var _webgazerInstance$cur;\n      if ((_webgazerInstance$cur = webgazerInstance.current) !== null && _webgazerInstance$cur !== void 0 && _webgazerInstance$cur.end) {\n        webgazerInstance.current.end();\n      }\n    };\n  }, [initializeWebGazer]);\n\n  // ตั้งค่า GazeListener เมื่อ webgazer พร้อม\n  useEffect(() => {\n    if (webgazerReady && webgazerInstance.current) {\n      const currentWebgazer = webgazerInstance.current;\n      currentWebgazer.setGazeListener(handleGaze);\n      return () => currentWebgazer.clearGazeListener();\n    }\n  }, [handleGaze, webgazerReady]);\n  return /*#__PURE__*/_jsxDEV(WebGazerContext.Provider, {\n    value: {\n      webgazerReady,\n      webgazerInstance,\n      calibrating,\n      calibrationPoints,\n      startCalibration,\n      stopCalibration,\n      handleCalibrationClick,\n      isGazing,\n      gazeTarget\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(WebGazerProvider, \"g4m0XysYcVkj/wjLO0+qZ7SigEc=\");\n_c = WebGazerProvider;\nexport const useWebGazerContext = () => {\n  _s2();\n  const context = useContext(WebGazerContext);\n  if (!context) {\n    throw new Error('useWebGazerContext must be used within a WebGazerProvider');\n  }\n  return context;\n};\n_s2(useWebGazerContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WebGazerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","WebGazerContext","WebGazerProvider","children","_s","webgazerReady","setWebgazerReady","webgazerInstance","calibrating","setCalibrating","calibrationPoints","setCalibrationPoints","clickCounts","setClickCounts","Array","fill","lastGazeTime","setLastGazeTime","isGazing","setIsGazing","gazeTarget","setGazeTarget","initializeWebGazer","window","webgazer","setRegression","setTracker","setGazeListener","data","clock","handleGaze","begin","current","showVideoPreview","showPredictionPoints","savedData","localStorage","getItem","loadGlobalData","JSON","parse","error","console","startCalibration","clearData","generateCalibrationPoints","stopCalibration","calibrationData","stringify","getGlobalData","setItem","positions","x","y","map","pos","color","handleCalibrationClick","index","e","clientX","clientY","recordScreenPosition","prevClickCounts","newClickCounts","prevPoints","newCalibrationPoints","currentTime","timeSinceLastGaze","element","document","elementFromPoint","interactiveElement","closest","click","_webgazerInstance$cur","end","currentWebgazer","clearGazeListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebGazerContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/WebGazerContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\n\nconst WebGazerContext = createContext();\n\nexport const WebGazerProvider = ({ children }) => {\n  const [webgazerReady, setWebgazerReady] = useState(false);\n  const webgazerInstance = useRef(null);\n  const [calibrating, setCalibrating] = useState(false);\n  const [calibrationPoints, setCalibrationPoints] = useState([]);\n  const [clickCounts, setClickCounts] = useState(Array(15).fill(0));\n  const [lastGazeTime, setLastGazeTime] = useState(0);\n  const [isGazing, setIsGazing] = useState(false);\n  const [gazeTarget, setGazeTarget] = useState(null);\n  \n  const initializeWebGazer = useCallback(async () => {\n    try {\n      await window.webgazer\n        .setRegression('ridge')\n        .setTracker('TFFacemesh')\n        .setGazeListener((data, clock) => {\n          if (data == null || calibrating) return;\n          handleGaze(data, clock);  // เรียกใช้ handleGaze\n        })\n        .begin();\n  \n      webgazerInstance.current = window.webgazer;\n      setWebgazerReady(true);\n  \n      // ซ่อน UI ของ WebGazer\n      window.webgazer.showVideoPreview(false).showPredictionPoints(false);\n  \n      // โหลดข้อมูล calibration ที่บันทึกไว้\n      const savedData = localStorage.getItem('webgazerGlobalData');\n      if (savedData) {\n        window.webgazer.loadGlobalData(JSON.parse(savedData));\n      }\n  \n    } catch (error) {\n      console.error('Failed to initialize webgazer:', error);\n    }\n  }, [calibrating, handleGaze]);  // เพิ่ม handleGaze ใน dependency\n  \n\n  // ฟังก์ชันสำหรับเริ่มคาลิเบรต\n  const startCalibration = useCallback(() => {\n    if (webgazerInstance.current) {\n      webgazerInstance.current.clearData();\n      setCalibrating(true);\n      setCalibrationPoints(generateCalibrationPoints());\n      setClickCounts(Array(15).fill(0));\n    }\n  }, []);\n\n  // ฟังก์ชันสำหรับหยุดคาลิเบรต\n  const stopCalibration = useCallback(() => {\n    setCalibrating(false);\n    setCalibrationPoints([]);\n    // บันทึกข้อมูล calibration\n    const calibrationData = JSON.stringify(window.webgazer.getGlobalData());\n    localStorage.setItem('webgazerGlobalData', calibrationData);\n  }, []);\n\n  // ฟังก์ชันสำหรับสร้างจุดคาลิเบรต\n  const generateCalibrationPoints = () => {\n    const positions = [\n      { x: 12, y: 25 }, { x: 12, y: 48 }, { x: 12, y: 69 }, { x: 12, y: 92 },\n      { x: 35, y: 45 }, { x: 61, y: 45 }, { x: 87, y: 45 },\n      { x: 35, y: 67 }, { x: 61, y: 67 }, { x: 87, y: 67 },\n      { x: 35, y: 86 }, { x: 61, y: 86 }, { x: 87, y: 86 },\n      { x: 89, y: 28 }, { x: 95, y: 7 }\n    ];\n    return positions.map(pos => ({ x: `${pos.x}%`, y: `${pos.y}%`, color: 'red' }));\n  };\n\n  // ฟังก์ชันสำหรับการคาลิเบรต (คลิกจุด)\n  const handleCalibrationClick = useCallback((index, e) => {\n    if (webgazerInstance.current) {\n      const { clientX, clientY } = e;\n      webgazerInstance.current.recordScreenPosition(clientX, clientY, 'click');\n      setClickCounts(prevClickCounts => {\n        const newClickCounts = [...prevClickCounts];\n        newClickCounts[index] += 1;\n        if (newClickCounts[index] >= 3) {\n          setCalibrationPoints(prevPoints => {\n            const newCalibrationPoints = [...prevPoints];\n            newCalibrationPoints[index].color = 'yellow';\n            return newCalibrationPoints;\n          });\n        }\n        return newClickCounts;\n      });\n    }\n  }, []);\n\n  // ฟังก์ชันจับการจ้องมอง\n  const handleGaze = useCallback((data, clock) => {\n    if (data == null || calibrating) return;\n\n    const { x, y } = data;\n    const currentTime = clock;\n    const timeSinceLastGaze = currentTime - lastGazeTime;\n\n    const element = document.elementFromPoint(x, y);\n    const interactiveElement = element?.closest('button, a, [role=\"button\"]');\n\n    if (interactiveElement) {\n      if (gazeTarget !== interactiveElement) {\n        setGazeTarget(interactiveElement);\n        setLastGazeTime(currentTime);\n      } else if (timeSinceLastGaze >= 1000) {\n        setIsGazing(true);\n        interactiveElement.click();\n        setGazeTarget(null);\n        setLastGazeTime(currentTime);\n      }\n    } else {\n      setGazeTarget(null);\n      setIsGazing(false);\n    }\n  }, [calibrating, lastGazeTime, gazeTarget]);\n\n  // เริ่มใช้งาน WebGazer เมื่อ component ถูก mount\n  useEffect(() => {\n    initializeWebGazer();\n    return () => {\n      if (webgazerInstance.current?.end) {\n        webgazerInstance.current.end();\n      }\n    };\n  }, [initializeWebGazer]);\n\n  // ตั้งค่า GazeListener เมื่อ webgazer พร้อม\n  useEffect(() => {\n    if (webgazerReady && webgazerInstance.current) {\n      const currentWebgazer = webgazerInstance.current;\n      currentWebgazer.setGazeListener(handleGaze);\n      return () => currentWebgazer.clearGazeListener();\n    }\n  }, [handleGaze, webgazerReady]);\n\n  return (\n    <WebGazerContext.Provider value={{ \n      webgazerReady, \n      webgazerInstance, \n      calibrating, \n      calibrationPoints, \n      startCalibration, \n      stopCalibration, \n      handleCalibrationClick, \n      isGazing,\n      gazeTarget \n    }}>\n      {children}\n    </WebGazerContext.Provider>\n  );\n};\n\nexport const useWebGazerContext = () => {\n  const context = useContext(WebGazerContext);\n  if (!context) {\n    throw new Error('useWebGazerContext must be used within a WebGazerProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}