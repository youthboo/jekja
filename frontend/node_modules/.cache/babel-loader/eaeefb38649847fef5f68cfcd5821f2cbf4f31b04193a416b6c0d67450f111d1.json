{"ast":null,"code":"var _s = $RefreshSig$();\n// src/WebGazerSetup.js\nimport { useEffect } from 'react';\nimport WebGazer from 'webgazer';\nconst WebGazerSetup = ({\n  onGaze\n}) => {\n  _s();\n  useEffect(() => {\n    WebGazer.setRegression('ridge') // หรือเลือก regression model ที่ต้องการ\n    .setGazeListener((data, elapsedTime) => {\n      if (data) {\n        onGaze(data); // ส่งข้อมูลการมองของตาไปยัง callback\n      }\n    }).begin();\n    return () => {\n      WebGazer.end();\n    };\n  }, [onGaze]);\n  return null;\n};\n_s(WebGazerSetup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WebGazerSetup;\nexport default WebGazerSetup;\nvar _c;\n$RefreshReg$(_c, \"WebGazerSetup\");","map":{"version":3,"names":["useEffect","WebGazer","WebGazerSetup","onGaze","_s","setRegression","setGazeListener","data","elapsedTime","begin","end","_c","$RefreshReg$"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/components/WebGazerSetup.js"],"sourcesContent":["// src/WebGazerSetup.js\nimport { useEffect } from 'react';\nimport WebGazer from 'webgazer';\n\nconst WebGazerSetup = ({ onGaze }) => {\n  useEffect(() => {\n    WebGazer.setRegression('ridge') // หรือเลือก regression model ที่ต้องการ\n      .setGazeListener((data, elapsedTime) => {\n        if (data) {\n          onGaze(data); // ส่งข้อมูลการมองของตาไปยัง callback\n        }\n      })\n      .begin();\n\n    return () => {\n      WebGazer.end();\n    };\n  }, [onGaze]);\n\n  return null;\n};\n\nexport default WebGazerSetup;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpCJ,SAAS,CAAC,MAAM;IACdC,QAAQ,CAACI,aAAa,CAAC,OAAO,CAAC,CAAC;IAAA,CAC7BC,eAAe,CAAC,CAACC,IAAI,EAAEC,WAAW,KAAK;MACtC,IAAID,IAAI,EAAE;QACRJ,MAAM,CAACI,IAAI,CAAC,CAAC,CAAC;MAChB;IACF,CAAC,CAAC,CACDE,KAAK,CAAC,CAAC;IAEV,OAAO,MAAM;MACXR,QAAQ,CAACS,GAAG,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAhBIF,aAAa;AAAAS,EAAA,GAAbT,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}