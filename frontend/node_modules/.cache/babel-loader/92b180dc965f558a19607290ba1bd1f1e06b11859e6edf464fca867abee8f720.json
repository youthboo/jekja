{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nconst useWebGazer = onGaze => {\n  _s();\n  const webgazerInstance = useRef(null);\n  useEffect(() => {\n    const initializeWebGazer = async () => {\n      try {\n        await window.webgazer.setRegression('ridge').setTracker('clmtrackr').setGazeListener(onGaze).begin();\n        webgazerInstance.current = window.webgazer;\n        window.webgazer.showVideo(false);\n        window.webgazer.showFaceOverlay(false);\n        window.webgazer.showFaceFeedbackBox(false);\n      } catch (error) {\n        console.error('Failed to initialize webgazer:', error);\n      }\n    };\n    initializeWebGazer();\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        webgazerInstance.current.end();\n      }\n    };\n  }, [onGaze]);\n  return webgazerInstance.current;\n};\n_s(useWebGazer, \"cP1VEmxuxBiCrE+wrHh4b7a51fk=\");\nexport default useWebGazer;","map":{"version":3,"names":["useEffect","useRef","useWebGazer","onGaze","_s","webgazerInstance","initializeWebGazer","window","webgazer","setRegression","setTracker","setGazeListener","begin","current","showVideo","showFaceOverlay","showFaceFeedbackBox","error","console","end"],"sources":["/Users/aqwerrrx/Desktop/special1/frontend/src/hooks/useWebGazer.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst useWebGazer = (onGaze) => {\n  const webgazerInstance = useRef(null);\n\n  useEffect(() => {\n    const initializeWebGazer = async () => {\n      try {\n        await window.webgazer.setRegression('ridge').setTracker('clmtrackr')\n          .setGazeListener(onGaze).begin();\n        webgazerInstance.current = window.webgazer;\n\n        window.webgazer.showVideo(false);\n        window.webgazer.showFaceOverlay(false);\n        window.webgazer.showFaceFeedbackBox(false);\n      } catch (error) {\n        console.error('Failed to initialize webgazer:', error);\n      }\n    };\n\n    initializeWebGazer();\n\n    return () => {\n      if (webgazerInstance.current && typeof webgazerInstance.current.end === 'function') {\n        webgazerInstance.current.end();\n      }\n    };\n  }, [onGaze]);\n\n  return webgazerInstance.current;\n};\n\nexport default useWebGazer;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC9B,MAAMC,gBAAgB,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,UAAU,CAAC,WAAW,CAAC,CACjEC,eAAe,CAACR,MAAM,CAAC,CAACS,KAAK,CAAC,CAAC;QAClCP,gBAAgB,CAACQ,OAAO,GAAGN,MAAM,CAACC,QAAQ;QAE1CD,MAAM,CAACC,QAAQ,CAACM,SAAS,CAAC,KAAK,CAAC;QAChCP,MAAM,CAACC,QAAQ,CAACO,eAAe,CAAC,KAAK,CAAC;QACtCR,MAAM,CAACC,QAAQ,CAACQ,mBAAmB,CAAC,KAAK,CAAC;MAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDX,kBAAkB,CAAC,CAAC;IAEpB,OAAO,MAAM;MACX,IAAID,gBAAgB,CAACQ,OAAO,IAAI,OAAOR,gBAAgB,CAACQ,OAAO,CAACM,GAAG,KAAK,UAAU,EAAE;QAClFd,gBAAgB,CAACQ,OAAO,CAACM,GAAG,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZ,OAAOE,gBAAgB,CAACQ,OAAO;AACjC,CAAC;AAACT,EAAA,CA5BIF,WAAW;AA8BjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}